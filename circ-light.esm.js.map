{"version":3,"sources":["/Users/coryhall/Code/FL/anonymous.club/libs/ui/src/lib/world-environment/CirculatingLight.tsx"],"names":["CirculatingLight","shouldStop","center","cX","cY","cZ","axis","aX","aY","aZ","radius","period","freq","offset","props","ref","useRef","sR","time","useSpring","config","tension","friction","position","api","x","y","z","useFrame","clock","tD","get","start","immediate","set","r","t","Math","sin","cos","animated","pointLight","castShadow","intensity","shadow-bias","shadow-mapSize-height","shadow-mapSize-width","position-x","position-y","position-z"],"mappings":"q4BAgBO,SAASA,EAAT,GASmB,IATO,WAC/BC,KACAC,QAASC,EAAIC,EAAIC,GAAM,CAAC,EAAG,EAAG,GAC9BC,MAAOC,EAAIC,EAAIC,GAAM,CAAC,EAAG,EAAG,GAHG,OAI/BC,EAAS,IAJsB,OAK/BC,EAAS,GALsB,KAM/BC,EAAO,EAAID,EANoB,OAO/BE,EAAS,GAEe,EADrBC,EACqB,iBACxB,MAAMC,EAAMC,oBACN,GAAEC,EAAF,KAAMC,GAASC,oBAAU,CAAEF,GAAIP,EAAQQ,KAAML,EAAQO,OAAQ,CAAEC,QAAS,GAAIC,SAAU,QACrFC,EAAUC,GAAOL,oBAAU,MAChCM,EAAGtB,EAAKO,EAASH,EACjBmB,EAAGtB,EAAKM,EAASF,EACjBmB,EAAGtB,EAAKK,EAASD,KAkBnB,OAhBAmB,YAAS,EAAGC,YACV,MAAMC,EAAKZ,EAAKa,MACZ9B,EAEFiB,EAAKc,MAAMF,GAtBO,EAAI,IAsBS,CAAEG,WAAUA,IAE3Cf,EAAKgB,IAAIJ,EAzBM,EAAI,IA2BrB,MAAMK,EAAIlB,EAAGc,MACPK,EAAIvB,EAASiB,EAAKlB,EACxBY,EAAIU,IAAI,CACNP,EAAGtB,EAAKgC,KAAKC,IAAIF,GAAKD,EAAI1B,EAC1BgB,EAAGtB,EAAKkC,KAAKE,IAAIH,GAAKD,EAAI5B,EAC1BmB,EAAGtB,EAAKiC,KAAKC,IAAIF,GAAKD,EAAI3B,MAI5B,cAAC,EAAAgC,SAASC,WAAV,KACEC,cACAC,UAAW,EACXC,eAAc,KACdC,wBAAuB,KACvBC,uBAAsB,MAClBhC,GANN,IAOEiC,aAAYxB,EAASE,EACrBuB,aAAYzB,EAASG,EACrBuB,aAAY1B,EAASI,EACrBZ,IAAKA","file":"circ-light.esm.js","sourcesContent":["import { PointLightProps, useFrame } from '@react-three/fiber';\nimport { useRef } from 'react';\nimport { useSpring, animated } from '@react-spring/three';\nimport { Vector3Array } from '@anonymous.club/types';\n\ntype CirculatingLightProps = {\n  shouldStop?: boolean;\n  center: Vector3Array;\n  axis: Vector3Array;\n  radius: number;\n  offset?: number;\n  period?: number;\n  freq: number;\n} & PointLightProps;\nconst TICK_FORWARD = 1 / 30;\nconst TICK_BACKWARD = -(1 / 180);\nexport function CirculatingLight({\n  shouldStop = false,\n  center: [cX, cY, cZ] = [0, 0, 0],\n  axis: [aX, aY, aZ] = [1, 0, 1],\n  radius = 100,\n  period = 30,\n  freq = 1 / period,\n  offset = 0,\n  ...props\n}: CirculatingLightProps) {\n  const ref = useRef();\n  const { sR, time } = useSpring({ sR: radius, time: offset, config: { tension: 20, friction: 190 } });\n  const [position, api] = useSpring(() => ({\n    x: cX + radius * aX,\n    y: cY + radius * aY,\n    z: cZ + radius * aZ,\n  }));\n  useFrame(({ clock }) => {\n    const tD = time.get();\n    if (shouldStop) {\n      // sR.start(radius * 2);\n      time.start(tD + TICK_BACKWARD, { immediate: true });\n    } else {\n      time.set(tD + TICK_FORWARD);\n    }\n    const r = sR.get();\n    const t = offset + tD * freq;\n    api.set({\n      z: cZ + Math.sin(t) * r * aZ,\n      x: cX + Math.cos(t) * r * aX,\n      y: cY + Math.sin(t) * r * aY,\n    });\n  });\n  return (\n    <animated.pointLight\n      castShadow\n      intensity={4}\n      shadow-bias={-0.00002}\n      shadow-mapSize-height={2048}\n      shadow-mapSize-width={2048}\n      {...props}\n      position-x={position.x}\n      position-y={position.y}\n      position-z={position.z}\n      ref={ref}\n      />\n  );\n}\n"],"sourceRoot":"webpack:///"}